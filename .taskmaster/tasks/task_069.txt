# Task ID: 69
# Title: Create Probe Targeting Control UI Components
# Status: pending
# Dependencies: 5, 34, 37
# Priority: medium
# Description: Design and implement frontend components for the probe targeting system including targeting mode toggles, heat map overlays, placement predictors, and smooth visual transitions between targeting modes.
# Details:
Create comprehensive ProbeTargetingUI component suite with the following elements: 1) **TargetingControlPanel Component**: Implement toggle button interface using TouchableOpacity components with three targeting modes - Dying Star Priority (red theme), Pattern Completion (blue theme), Empty Sector Exploration (green theme). Include active state indicators with haptic feedback using expo-haptics and smooth state transitions using react-native-reanimated. Use NativeWind styling for dark space theme with quantum-themed borders and glow effects. 2) **HeatMapOverlay Component**: Create SVG-based visualization using react-native-svg with semi-transparent colored regions representing targeting priorities. Implement red zones for dying stars using circle/polygon shapes, blue zones for pattern completion opportunities, and green zones for empty exploration sectors. Include opacity animations for smooth transitions between different heat map modes using Animated.Value. 3) **ProbePlacementPredictor Component**: Design visual probability zones showing optimal probe placement locations using SVG path elements with gradient fills and pulsing animations. Calculate and display success probability percentages based on selected targeting mode. Include predictive trajectory lines showing probe paths using Bezier curves. 4) **TargetingHUD Component**: Create status indicator overlay showing current targeting mode with icon badges, active zone counts, and prediction confidence metrics. Integrate with existing HUD system using consistent styling and positioning. 5) **TargetingModeTransitions**: Implement smooth animated transitions between targeting visualizations using coordinated opacity, scale, and position animations with react-native-reanimated shared values for 60fps performance.

# Test Strategy:
Test TargetingControlPanel rendering with all three targeting modes and verify proper toggle state management, haptic feedback triggers, and visual state transitions. Validate HeatMapOverlay by rendering with mock sector data for each targeting mode, confirming proper SVG path generation and smooth opacity transitions between modes. Test ProbePlacementPredictor accuracy by providing various sector configurations and verifying probability calculations match expected targeting algorithms. Validate TargetingHUD integration by testing overlay positioning with different screen sizes and confirming status indicators update correctly when targeting modes change. Performance test animated transitions by rapidly switching between targeting modes and monitoring frame rate consistency during complex SVG rendering with 100+ overlay elements.
