# Task ID: 46
# Title: Replace react-native-modal with Custom Overlay Components
# Status: done
# Dependencies: 3, 5, 44
# Priority: medium
# Description: Remove react-native-modal dependency and implement custom overlay components using absolute positioning and CSS transforms for beacon upgrades, probe details, and contextual interfaces while maintaining full React Native screens for Settings and Statistics.
# Details:
1) **Remove react-native-modal Dependency**: Uninstall react-native-modal package and remove all imports across the codebase. Identify all current modal usage including BeaconDetailsModal, probe details, upgrade interfaces, and contextual overlays. 2) **Create Custom Overlay System**: Implement OverlayManager class using React Context for global overlay state management. Create BaseOverlay component with absolute positioning (position: 'absolute', top: 0, left: 0, right: 0, bottom: 0) and z-index layering. Use CSS transforms for smooth animations: opacity transitions for fade in/out, translateY transforms for slide effects. 3) **Implement Contextual Overlays**: Convert BeaconDetailsModal to BeaconDetailsOverlay with absolute positioning over galaxy map, maintaining beacon upgrade functionality with smooth animation entry from selected beacon position. Create ProbeDetailsOverlay for probe information display. Implement upgrade interfaces as overlay components with proper backdrop handling and touch-outside dismissal. 4) **Performance Optimization**: Use React Native's Modal component only as backdrop container to prevent underlying interaction while overlays are visible. Implement overlay queuing system to handle multiple overlay requests gracefully. Use hardware-accelerated transforms (transform3d) for smooth 60fps animations. 5) **Integration with Galaxy Map**: Ensure overlays render above GalaxyMapView while maintaining map interaction when overlays are dismissed. Implement smooth coordinate-based animations from beacon/probe positions to overlay centers using interpolation.

# Test Strategy:
Test overlay system functionality by opening beacon details from galaxy map selections and verifying smooth animation performance with opacity and translateY transforms. Validate overlay dismissal through backdrop taps and proper cleanup of overlay state. Test multiple overlay scenarios to ensure proper z-index layering and no visual conflicts. Verify performance improvement by measuring frame rates during overlay animations compared to previous react-native-modal implementation. Test that Settings and Statistics screens continue to function as full React Native screens with proper navigation. Validate that all contextual interfaces (beacon upgrades, probe details) maintain their functionality after conversion to overlay system.
