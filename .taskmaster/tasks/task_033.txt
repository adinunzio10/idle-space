# Task ID: 33
# Title: Implement Resonance Crystals and Void Fragments Resource Types
# Status: pending
# Dependencies: 7, 23
# Priority: medium
# Description: Add two new resource types: Resonance Crystals generated from geometric pattern formations, and Void Fragments collected from dead star systems, both using BigNumber.js for precise calculations.
# Details:
Extend the existing ResourceManager to include two new resource types with specialized generation mechanics: 1) **Resonance Crystals**: Create ResonanceCrystalGenerator that integrates with PatternDetector to calculate crystal generation based on detected geometric patterns. Implement generation rates: Triangle patterns produce 1 crystal/minute, Square patterns 2 crystals/minute, Pentagon patterns 5 crystals/minute, Hexagon patterns 10 crystals/minute. Use multiplicative stacking for overlapping patterns. Add crystals to pattern bonus calculations in existing PatternBonus system. 2) **Void Fragments**: Create VoidFragmentCollector that interfaces with star system states from the galactic environment. Implement collection mechanics: dead star systems generate 0.1 fragments/minute when within beacon network range, with collection rate scaling by number of connected beacons (max 1.0 fragments/minute per dead system). Add manual collection action for immediate fragment harvesting from dead systems. 3) **BigNumber Integration**: Extend existing BigNumber.js usage from core resource system to handle both new resource types. Implement ResourceFormatter for display with appropriate suffixes (K, M, B for crystals, scientific notation for fragments). Add validation and conversion methods for resource calculations. 4) **Storage Integration**: Extend save system to persist new resource counts with versioning. Add resources to offline progression calculations. 5) **UI Integration**: Add Resonance Crystals and Void Fragments to resource display HUD alongside existing resources. Create visual indicators for crystal generation from patterns and fragment collection opportunities from dead systems.

# Test Strategy:
Test pattern-based crystal generation by creating various geometric formations and verifying correct generation rates with multiplicative stacking. Test void fragment collection from dead star systems at different beacon network ranges and connection counts. Validate BigNumber.js calculations for both resource types handle large values without precision loss. Test resource persistence across app restarts and offline progression calculations. Verify UI displays correctly update with new resource counts and visual indicators for generation opportunities. Test edge cases like pattern destruction affecting crystal generation and beacon network changes affecting fragment collection rates.
